/*
 * Copyright (c) 1999 Apple Computer, Inc. All rights reserved.
 *
 * @APPLE_LICENSE_HEADER_START@
 * 
 * "Portions Copyright (c) 1999 Apple Computer, Inc.  All Rights
 * Reserved.  This file contains Original Code and/or Modifications of
 * Original Code as defined in and that are subject to the Apple Public
 * Source License Version 1.0 (the 'License').  You may not use this file
 * except in compliance with the License.  Please obtain a copy of the
 * License at http://www.apple.com/publicsource and read it before using
 * this file.
 * 
 * The Original Code and all software distributed under the License are
 * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
 * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
 * License for the specific language governing rights and limitations
 * under the License."
 * 
 * @APPLE_LICENSE_HEADER_END@
 */

/*
 * Copyright 1993 NeXT, Inc.
 * All rights reserved.
 */

#ifdef KERNEL_PRIVATE

#import <bsd/dev/kmreg_com.h>

static char km_wait_cursor_1[] = {
0x55, 0x40, 0x01, 0x55, 0x54, 0x16, 0xbd, 0x55, 0x50, 0x56, 0xbe, 
0x95, 0x40, 0x16, 0xfa, 0xa9, 0x44, 0x06, 0xea, 0x59, 0x15, 0x46, 
0xe9, 0x43, 0x29, 0x92, 0xe4, 0x03, 0x2a, 0xaa, 0x91, 0x57, 0x2e, 
0xfe, 0xaa, 0x67, 0x3f, 0xe9, 0xaf, 0xab, 0x3e, 0xa4, 0x6b, 0xfb, 
0x5a, 0x94, 0x5a, 0xfd, 0x5a, 0x54, 0x1a, 0xbd, 0x56, 0x50, 0x5a, 
0xb5, 0x56, 0x80, 0x1b, 0xd5, 0x55, 0x7f, 0xfd, 0x55
};
static char km_wait_cursor_2[] = {
0x55, 0x40, 0x01, 0x55, 0x54, 0x10, 0x15, 0x55, 0x51, 0x50, 0x56, 
0x95, 0x4a, 0x54, 0x5a, 0xf9, 0x4e, 0x94, 0x6b, 0xf9, 0x3f, 0xa4, 
0x6f, 0xab, 0x2f, 0xf9, 0x7e, 0xa7, 0x2a, 0xbe, 0xe9, 0x57, 0x26, 
0x6b, 0xe0, 0x07, 0x15, 0x52, 0xe5, 0x03, 0x14, 0x06, 0xf9, 0x5b, 
0x50, 0x16, 0xfa, 0x5d, 0x50, 0x56, 0xfa, 0x9d, 0x54, 0x5a, 0xbe, 
0xb5, 0x55, 0x6a, 0xbf, 0xd5, 0x55, 0x7f, 0xfd, 0x55
};
static char km_wait_cursor_3[] = {
0x55, 0x40, 0x01, 0x55, 0x54, 0x3a, 0x94, 0x15, 0x52, 0xfa, 0x94, 
0x05, 0x46, 0xbe, 0x50, 0x09, 0x46, 0xbe, 0x50, 0x59, 0x15, 0xae, 
0x55, 0x6b, 0x01, 0x6b, 0x6a, 0xab, 0x00, 0x06, 0xff, 0xff, 0x04, 
0x5b, 0xaa, 0xff, 0x15, 0x6b, 0x56, 0xab, 0x16, 0xae, 0x45, 0xab, 
0x5a, 0xbe, 0x45, 0x6d, 0x5a, 0xfe, 0x51, 0x7d, 0x56, 0xfa, 0x50, 
0xb5, 0x56, 0xaa, 0x9b, 0xd5, 0x55, 0x7f, 0xfd, 0x55
};

#define KM_DEVICE_WAITCURSOR_WIDTH	16
#define KM_DEVICE_WAITCURSOR_HEIGHT	16

#define KM_DEVICE_WAITCURSOR_NSTATES	3
/* Delay 1/9 second between animation frames */
#define KM_DEVICE_WAITCURSOR_DELAY	111111111

/*
 * These values correspond to the location used by the booter.
 * Eventually the booter should leave these values behind for later use.
 */
#define KM_DEVICE_WAITCURSOR_X		(320-8)
#define KM_DEVICE_WAITCURSOR_Y		256

#define KM_DEVICE_BACKGROUND_COLOR	KM_COLOR_LTGRAY

static struct km_drawrect kmDeviceWaitCursor[] = {
{KM_DEVICE_WAITCURSOR_X, KM_DEVICE_WAITCURSOR_Y,
 KM_DEVICE_WAITCURSOR_WIDTH, KM_DEVICE_WAITCURSOR_HEIGHT,
 km_wait_cursor_1},
{KM_DEVICE_WAITCURSOR_X, KM_DEVICE_WAITCURSOR_Y,
  KM_DEVICE_WAITCURSOR_WIDTH, KM_DEVICE_WAITCURSOR_HEIGHT,
  km_wait_cursor_2},
{KM_DEVICE_WAITCURSOR_X, KM_DEVICE_WAITCURSOR_Y,
 KM_DEVICE_WAITCURSOR_WIDTH, KM_DEVICE_WAITCURSOR_HEIGHT,
 km_wait_cursor_3},
};

static struct km_drawrect kmDeviceBlankCursor = {
KM_DEVICE_WAITCURSOR_X, KM_DEVICE_WAITCURSOR_Y,
  KM_DEVICE_WAITCURSOR_WIDTH, KM_DEVICE_WAITCURSOR_HEIGHT,
  (void *)KM_DEVICE_BACKGROUND_COLOR
};

#endif /* KERNEL_PRIVATE */
